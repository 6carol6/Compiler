
void connect_tree(struct Node** root, int n, ...){
	va_list child_list;
	va_start(child_list, n);
	struct Node* child;
	
	int i;
	for(i = 0; i < n; i++){
		child = va_arg(child_list, struct Node*);
		if(child == NULL) continue;
		if((*root)->children == NULL){
			(*root)->children = child;
			(*root)->line_num = child->line_num;
			continue;
		}
		struct Node* p = (*root)->children;
		while(!(p->brother == NULL)){
			p = p->brother;
		}
		p->brother = child;
	}
	va_end(child_list);
}

void display_tree(struct Node* root, int blank){
	int i; 
	for(i = 0; i < blank; i++){
		printf("  ");
	}
	printf("%s", root->name);
	if(root->show_line_num == 1)
		printf("  (%d)\n", root->line_num);
	else{
		if(strcmp(root->name,"INT") == 0)
			printf(" : %d", (int)strtol(root->subname, NULL, 0));
		else if(strcmp(root->name, "FLOAT") == 0)
			printf(" : %f", atof(root->subname));
		else if(strcmp(root->name, "TYPE") == 0 || strcmp(root->name, "ID") == 0)
			printf(" : %s", root->subname);	
			
		printf("\n");
	}
	struct Node* p = root->children;
	while(p != NULL){
		display_tree(p, blank+1);
		p = p->brother;
	}
}
